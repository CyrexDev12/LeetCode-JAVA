class Solution {
    public double findMedianSortedArrays(int[] nums1, int[] nums2) {
        // First we need to merge and then sort

        // If odd the median is the middle value

        // If even the median is in between the 2 middle values 

        int[] merged = mergeSort(nums1, nums2);

        if (merged.length % 2 != 0) {
            return (double) merged[merged.length / 2];
        }

        else {
            return (double) (merged[merged.length / 2] + merged[(merged.length - 1) / 2]) / 2;
        }


    }



       public static int[] mergeSort(int[] arr1, int[] arr2) {
        int[] merged = new int[arr1.length + arr2.length];
        int i = 0, j = 0, k = 0;

        while (i < arr1.length && j < arr2.length) {
            if (arr1[i] <= arr2[j]) {
                merged[k++] = arr1[i++];
            } else {
                merged[k++] = arr2[j++];
            }
        }
        while (i < arr1.length) {
            merged[k++] = arr1[i++];
        }
        while (j < arr2.length) {
            merged[k++] = arr2[j++];
        }
        return merged;
    }
}
