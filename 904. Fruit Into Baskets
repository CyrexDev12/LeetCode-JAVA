class Solution {
    // You have only two baskets, and each basket can only hold a single type of fruit (No limit it can hold
    // Once we reach a tree with fruit that cannot fit, we must stop
    public static int totalFruit(int[] arr) {
        if (arr.length == 0) return 0;

        Map<Integer, Integer> basket = new HashMap<>();
        int left = 0, maxLen = 0;

        for (int right = 0; right < arr.length; right++) {
            basket.put(arr[right], basket.getOrDefault(arr[right], 0) + 1);

            // If we have more than 2 types of fruit, shrink the window
            while (basket.size() > 2) {
                basket.put(arr[left], basket.get(arr[left]) - 1);
                if (basket.get(arr[left]) == 0) {
                    basket.remove(arr[left]);
                }
                left++;
            }

            maxLen = Math.max(maxLen, right - left + 1);
        }

        return maxLen;
    }
}



